#!/usr/bin/env bash
#
# Check that the code follows a consistent code style
#

# Check for existence of indent, and error out if not present.
# On some *bsd systems the binary seems to be called gnunindent,
# so check for that first.

echo "--Checking style--"
for file in `git diff-index --cached --name-only HEAD --diff-filter=ACMR| grep -e "\.h$" -e "\.cpp$"` ; do
    # nf is the temporary checkout. This makes sure we check against the
    # revision in the index (and not the checked out version).
    nf=`git checkout-index --temp ${file} | cut -f 1`
    newfile_name=`basename $file`
    touch "/tmp/$newfile_name" || exit 1
    newfile="/tmp/$newfile_name"

    cp "${nf}" "${newfile}"

    INDENT="hooks/cpp-format"

    eval ${INDENT} $newfile 2>> /dev/null

    diff -u -p "${nf}" "${newfile}"
    r=$?
    rm "${newfile}"
    rm "${nf}"
    if [ $r != 0 ] ; then
echo "================================================================================================="
echo " Code style error in: $file                                                                      "
echo "                                                                                                 "
echo " Please fix before committing. Don't forget to run git add before trying to commit again.        "
echo " If the whole file is to be committed, run as :                                                  "
echo "                                                                                                 "
echo "   hooks/cpp-format $file; git add $file; git commit"
echo "                                                                                                 "
echo "================================================================================================="
        exit 1
    fi
done
echo "--Checking style pass--"
